{"version":3,"sources":["env/env.js","api/api.js","Components/Header/Header.module.css","Redux/auth-reducer.js","assets/images/loading.gif","Components/common/Preloader.js","Redux/todo-reducer.js","Redux/payments-reducer.js","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Redux/app-reducer.js","App.js","reportWebVitals.js","Redux/redux-store.js","index.js"],"names":["dev","instance","axios","withCredentials","baseURL","headers","todoAPI","getTodoLists","get","then","response","data","getTodoTasks","todoListId","currentPage","pageSize","items","map","o","startDate","Date","deadline","addTodoList","title","post","deleteTodoList","delete","changeTodoList","put","addTask","deleteTask","taskId","changeTask","task","description","status","priority","item","authAPI","getAuth","login","values","email","password","rememberMe","logout","module","exports","SET_USER_DATA","initialState","userId","isAuth","setUserDataAC","type","getAuthTC","dispatch","resultCode","id","setStatus","a","messages","authReducer","state","action","Preloader","src","preloader","alt","ADD_TASK","DELETE_TASK","CHANGE_TASK","CHANGE_TODO_LIST","SET_TODO_TASKS","ADD_TODO_LIST","DELETE_TODO_LIST","SET_TODO_LISTS","TOGGLE_IS_FETCHING","SET_TOTAL_PAGES_COUNT","CHANGE_PAGE","todoLists","todoTasks","completed","order","addedDate","isFetching","totalCount","changeTaskAC","onDeleteTaskAC","onDeleteTodoListAC","changeTodoListAC","toggleIsFetchingAC","setTotalPagesCountAC","page","totalCountUp","newTask","totalCountDown","Math","ceil","todoReducer","slice","filter","todoList","ADD_PAYMENT","UPDATE_PAYMENT_TEXT","UPDATE_PAYMENT_COST","dateFormat","num","paymentsData","date","payments","payment","category","cost","newPaymentText","newPaymentCost","onPaymentChangeAC","text","onPaymentCostChangeAC","onAddPaymentAC","paymentsReducer","newPayment","now","getDate","getMonth","getFullYear","obj","find","push","p","Header","props","className","styles","header","itemSmall","onClick","to","activeClassName","activeLink","name","HeaderContainer","this","React","Component","connect","auth","INITIALIZED_SUCCESS","initialized","appReducer","TodoContainer","lazy","TodoListsContainer","PaymentsContainer","Settings","LoginContainer","App","initializeApp","fallback","path","render","compose","withRouter","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","todoPage","paymentsPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c79fa50.chunk.js","sourcesContent":["export const dev = {\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n    apiKey: \"be208add-76be-474f-b426-6fa8679c0152\"\r\n    \r\n} \r\n","import * as axios from 'axios';\r\nimport { dev } from '../env/env';\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: dev.baseURL,\r\n    headers: { \"API-KEY\": dev.apiKey }\r\n\r\n})\r\n\r\nexport const todoAPI = {\r\n    getTodoLists() {\r\n        return instance.get('todo-lists')\r\n            .then(response => response.data);\r\n    },\r\n\r\n    getTodoTasks(todoListId, currentPage, pageSize) {\r\n        return instance.get('todo-lists/' + todoListId + `/tasks?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                response.data.items.map(o => {\r\n                    o.startDate = new Date(o.startDate + 'Z')\r\n                    o.deadline = new Date(o.deadline + 'Z')\r\n                    return { ...o }\r\n                })\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    addTodoList(title) {\r\n        return instance.post('todo-lists', { title })\r\n            .then(response => response.data)\r\n    },\r\n\r\n    deleteTodoList(todoListId) {\r\n        return instance.delete('todo-lists/' + todoListId)\r\n            .then(response => response.data)\r\n    },\r\n    changeTodoList(todoListId, title) {\r\n        return instance.put('todo-lists/' + todoListId, {\r\n            title: title,\r\n        })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    addTask(todoListId, title) {\r\n        return instance.post('todo-lists/' + todoListId + '/tasks', { title: title }) //или просто title\r\n            .then(response => {\r\n                return response.data })\r\n    },\r\n    deleteTask(todoListId, taskId) {\r\n        return instance.delete('todo-lists/' + todoListId + '/tasks/' + taskId)\r\n            .then(response => response.data)\r\n    },\r\n    changeTask(todoListId, taskId, task) {\r\n        return instance.put('todo-lists/' + todoListId + '/tasks/' + taskId, {\r\n            title: task.title,\r\n            description: task.description,\r\n            status: task.status,\r\n            priority: task.priority,\r\n            startDate: task.startDate,\r\n            deadline: task.deadline,\r\n        })\r\n            .then(response => {\r\n                response.data.data.item.startDate = new Date(response.data.data.item.startDate)\r\n                response.data.data.item.deadline = new Date(response.data.data.item.deadline)\r\n                return response.data\r\n\r\n            })\r\n    },\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get('auth/me')\r\n            .then(response => response.data);\r\n    },\r\n\r\n    login(values) {\r\n        return instance.post('auth/login', {\r\n            email: values.email,\r\n            password: values.password,\r\n            rememberMe: values.rememberMe\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3rkAF\",\"name\":\"Header_name__1kOkj\",\"items\":\"Header_items__m1LXD\",\"item\":\"Header_item__L_pNn\",\"activeLink\":\"Header_activeLink__3PL36\",\"itemSmall\":\"Header_itemSmall__2pkRv\",\"logout\":\"Header_logout__IQ0lr\"};","import { authAPI } from \"../api/api\";\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setUserDataAC = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getAuthTC = () => (dispatch) => {\r\n    return authAPI.getAuth()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                let { id, login, email } = data.data\r\n                dispatch(setUserDataAC(id, email, login, true))\r\n            }\r\n        })\r\n};\r\n\r\nexport const login = (values, setStatus) => async (dispatch) => {\r\n    let data = await authAPI.login(values);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthTC())\r\n    } else {\r\n        setStatus(data.messages[0])\r\n        }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserDataAC(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","import preloader from '../../assets/images/loading.gif'\r\nlet Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt='preloader' />\r\n    )\r\n}\r\n\r\nexport default Preloader;","import { todoAPI } from \"../api/api\";\r\n\r\n\r\nconst ADD_TASK = 'ADD_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nconst CHANGE_TASK = 'CHANGE_TASK';\r\nconst CHANGE_TODO_LIST = 'CHANGE_TODO_LIST';\r\nconst SET_TODO_TASKS = 'SET_TODO_TASKS'\r\nconst ADD_TODO_LIST = 'ADD_TODO_LIST';\r\nconst DELETE_TODO_LIST = 'DELETE_TODO_LIST';\r\nconst SET_TODO_LISTS = 'SET_TODO_LISTS'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst SET_TOTAL_PAGES_COUNT = 'SET_TOTAL_PAGES_COUNT'\r\nconst CHANGE_PAGE = 'CHANGE_PAGE'\r\n\r\nlet initialState = {\r\n    todoLists: [],\r\n    todoTasks: [\r\n        {\r\n            description: '',\r\n            title: '',\r\n            completed: '',\r\n            status: '',\r\n            priority: '',\r\n            startDate: new Date(),\r\n            deadline: new Date(),\r\n            id: '',\r\n            todoListId: '',\r\n            order: '',\r\n            addedDate: '',\r\n        }\r\n    ],\r\n/*     newTodoListName: '', */\r\n    isFetching: false,\r\n    pageSize: 10,\r\n    totalCount:null,\r\n    currentPage: 1\r\n};\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todoTasks: [action.item,\r\n/*                     action.item.deadline = new Date(action.item.deadline),\r\n                    action.item.startDate = new Date(action.item.startDate), */\r\n                     ...state.todoTasks.slice(0, 9)\r\n                    ],\r\n            }\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todoTasks: [...state.todoTasks.filter(task => {\r\n                    return task.id !== action.taskId;\r\n                })],\r\n            };\r\n        case CHANGE_TASK:\r\n            return {\r\n                ...state,\r\n                todoTasks: [...state.todoTasks.map(task => {\r\n                    if (task.id === action.taskId) {\r\n                        task = action.task;\r\n/*                         task.startDate = new Date(task.startDate);\r\n                        task.deadline = new Date(task.deadline); */\r\n                    }\r\n                    return task;\r\n                })],\r\n            };\r\n        case SET_TODO_TASKS:\r\n            return {\r\n                ...state,\r\n                todoTasks: action.todoTasks\r\n            };\r\n\r\n        case ADD_TODO_LIST:\r\n\r\n            return {\r\n                ...state,\r\n                todoLists: [action.item, ...state.todoLists]\r\n            };\r\n\r\n        case DELETE_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                todoLists: [...state.todoLists.filter(todoList => {\r\n                    return todoList.id !== action.todoListId;\r\n                })],\r\n            };\r\n\r\n        case CHANGE_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                todoLists: [...state.todoLists.map(todoList => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        todoList.title = action.title\r\n                    }\r\n                    return todoList;\r\n                })],\r\n            };\r\n\r\n        case SET_TODO_LISTS:\r\n            return {\r\n                ...state,\r\n                todoLists: action.todoLists,\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n            case SET_TOTAL_PAGES_COUNT:\r\n                return {\r\n                    ...state,\r\n                    totalCount: action.totalCount\r\n                }; \r\n            case CHANGE_PAGE:\r\n                return {\r\n                    ...state,\r\n                    currentPage: action.page\r\n                };\r\n                \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const changeTaskAC = (taskId, task) => ({\r\n    type: CHANGE_TASK,\r\n    taskId: taskId,\r\n    task: task\r\n});\r\nexport const onAddTaskAC = (item) => ({ type: ADD_TASK, item });\r\nexport const onDeleteTaskAC = (taskId) => ({ type: DELETE_TASK, taskId });\r\nexport const onAddTodoListAC = (item) => ({ type: ADD_TODO_LIST, item });\r\nexport const onDeleteTodoListAC = (todoListId) => ({ type: DELETE_TODO_LIST, todoListId });\r\nexport const changeTodoListAC = (todoListId, title) => ({\r\n    type: CHANGE_TODO_LIST,\r\n    todoListId: todoListId,\r\n    title: title\r\n});\r\nexport const setTodoListsAC = (todoLists) => ({ type: SET_TODO_LISTS, todoLists });\r\nexport const setTodoTasksAC = (todoTasks) => ({ type: SET_TODO_TASKS, todoTasks });\r\nexport const toggleIsFetchingAC = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const setTotalPagesCountAC = (totalCount) => ({ type: SET_TOTAL_PAGES_COUNT, totalCount });\r\nexport const changePageAC = (page) => ({ type: CHANGE_PAGE, page });\r\n\r\nexport const getTodoLists = () => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    const data = await todoAPI.getTodoLists();\r\n    dispatch(toggleIsFetchingAC(false));\r\n    dispatch(setTodoListsAC(data));\r\n    ;\r\n}\r\nexport const addTodoList = (title) => async (dispatch) => {\r\n    const data = await todoAPI.addTodoList(title);\r\n    if (data.resultCode === 0) {\r\n        dispatch(onAddTodoListAC(data.data.item))\r\n    }\r\n}\r\nexport const getTodoTasks = (todoListId, currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(changePageAC(currentPage))\r\n    let data = await todoAPI.getTodoTasks(todoListId, currentPage, pageSize);\r\n    dispatch(toggleIsFetchingAC(true))\r\n    dispatch(setTodoTasksAC(data.items))\r\n    dispatch(setTotalPagesCountAC(data.totalCount))\r\n\r\n}\r\nexport const addTask = (todoListId, title, /* cb, */ totalCount) => async (dispatch) => {\r\n    let data = await todoAPI.addTask(todoListId, title);\r\n    let totalCountUp = totalCount + 1;\r\n    if (data.resultCode === 0) {\r\n        let newTask = data.data.item;\r\n        newTask.description = 'Описание';\r\n        newTask.completed = false;\r\n        newTask.status = 3;\r\n        newTask.priority = 3;\r\n        newTask.startDate = new Date();\r\n        newTask.deadline = new Date(1000*60*60*24 + +new Date());\r\n        dispatch(onAddTaskAC(newTask))\r\n        dispatch(setTotalPagesCountAC(totalCountUp))\r\n        dispatch(changeTask(newTask.todoListId, newTask.id, newTask))\r\n/*         cb(); */\r\n    }\r\n\r\n}\r\nexport const deleteTask = (todoListId, taskId, totalCount, currentPage, pageSize) => async (dispatch) => {\r\n    let totalCountDown = totalCount - 1;\r\n    let data = await todoAPI.deleteTask(todoListId, taskId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(onDeleteTaskAC(taskId))\r\n        dispatch(setTotalPagesCountAC(totalCountDown))\r\n        if (totalCountDown % 10 === 0){\r\n            let currentPage = Math.ceil(totalCountDown / pageSize)\r\n            dispatch(getTodoTasks(todoListId, currentPage, pageSize))\r\n        }\r\n    }\r\n}\r\nexport const deleteTodoList = (todoListId) => async (dispatch) => {\r\n    let data = await todoAPI.deleteTodoList(todoListId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(onDeleteTodoListAC(todoListId))\r\n    }\r\n}\r\nexport const changeTodoList = (todoListId, title) => async (dispatch) => {\r\n    let data = await todoAPI.changeTodoList(todoListId, title);\r\n    if (data.resultCode === 0) {\r\n        dispatch(changeTodoListAC(todoListId, title))\r\n    }\r\n}\r\nexport const changeTask = (todoListId, taskId, task) => async (dispatch) => {\r\n    let data = await todoAPI.changeTask(todoListId, taskId, { ...task });\r\n    if (data.resultCode === 0) {\r\n        dispatch(changeTaskAC(taskId, data.data.item))\r\n    }\r\n}\r\n\r\nexport default todoReducer;","const ADD_PAYMENT = 'ADD_PAYMENT';\r\nconst UPDATE_PAYMENT_TEXT = 'UPDATE_PAYMENT_TEXT';\r\nconst UPDATE_PAYMENT_COST = 'UPDATE_PAYMENT_COST'\r\nlet dateFormat = (num) => {\r\n    if (num < 10) {\r\n        num = \"0\" + num;\r\n    }\r\n    return num;\r\n\r\n}\r\n\r\nlet initialState = {\r\n    paymentsData: [\r\n        {\r\n            date: '15.03.2021',\r\n            payments: [\r\n                { id: 1, payment: 'payment1', category: \"home\", cost: 50 },\r\n                { id: 2, payment: 'payment2', category: \"home\", cost: 15 },\r\n            ]\r\n        },\r\n        {\r\n            date: '11.06.2021',\r\n            payments: [\r\n                { id: 3, payment: 'payment3', category: \"car\", cost: 150 },\r\n                { id: 4, payment: 'payment4', category: \"car\", cost: 75 },\r\n            ]\r\n        },\r\n\r\n    ],\r\n    newPaymentText: '',\r\n    newPaymentCost: 0,\r\n};\r\n\r\nconst paymentsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_PAYMENT:\r\n            let newPayment = {\r\n                id: 7,\r\n                payment: state.newPaymentText,\r\n                category: 'home',\r\n                cost: state.newPaymentCost\r\n            }\r\n            let date = new Date();\r\n            let now = dateFormat(date.getDate()) + \".\" + dateFormat((date.getMonth() + 1)) + \".\" + date.getFullYear();\r\n            let obj = state.paymentsData.find(o => o.date === now);\r\n\r\n           return (\r\n                obj\r\n                    ? {\r\n                        ...state,\r\n                        paymentsData: state.paymentsData.map(o => {\r\n                            if (o.date === now) {\r\n                              o.payments.push(newPayment);\t\r\n                            }\r\n                            return {...o, payments: o.payments.map(p => ({...p}))};\r\n                        }),\r\n                        newPaymentCost: 0\r\n\r\n                    }\r\n\r\n                    : {\r\n                        ...state,\r\n                        paymentsData: [...state.paymentsData, { date: now, payments: [newPayment] }],\r\n                        newPaymentCost: 0\r\n                    }\r\n            )\r\n\r\n        case UPDATE_PAYMENT_TEXT:\r\n            return {\r\n                ...state,\r\n                newPaymentText: action.text\r\n            };\r\n        case UPDATE_PAYMENT_COST:\r\n            return {\r\n                ...state,\r\n                newPaymentCost: action.num\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const onPaymentChangeAC = (text) => ({\r\n    type: UPDATE_PAYMENT_TEXT,\r\n    text: text\r\n});\r\n\r\nexport const onPaymentCostChangeAC = (num) => ({\r\n\r\n    type: UPDATE_PAYMENT_COST,\r\n    num: num\r\n});\r\n\r\nexport const onAddPaymentAC = () => ({ type: ADD_PAYMENT })\r\n\r\nexport default paymentsReducer;","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Header.module.css\"\r\n\r\nconst Header = (props) => {\r\n    const logout = () => {\r\n        props.logout()\r\n    }\r\n    return (\r\n    <header className={styles.header}>    \r\n        <div className={styles.itemSmall}>\r\n            {props.isAuth \r\n            ?<div> \r\n            {props.login}\r\n            <div className={styles.logout} onClick={logout}>Logout</div>\r\n            </div>\r\n            :<NavLink to='/Login' activeClassName={styles.activeLink}>Login</NavLink>\r\n            }\r\n            \r\n        </div>\r\n        <div className={styles.itemSmall}>\r\n            <NavLink to='/Settings' activeClassName={styles.activeLink}>Settings</NavLink>\r\n        </div>\r\n\r\n        <div className={styles.name}>Trata</div>\r\n        <div className={styles.items}>\r\n            <div className={styles.item}>\r\n                <NavLink to='/TodoLists' activeClassName={styles.activeLink}>Todo</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to='/Payments' activeClassName={styles.activeLink}>Расходы</NavLink>\r\n            </div>\r\n        </div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../Redux/auth-reducer'\r\nimport Header from './Header'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <Header {...this.props}/> \r\n        )\r\n       \r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        logout: ()=>{\r\n            dispatch(logout())\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","import { getAuthTC } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\ninitialized: false\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthTC());\r\n    Promise.all([promise])\r\n            .then(()=>{\r\n            dispatch(initializedSuccess());\r\n        })\r\n};\r\n\r\n\r\nexport default appReducer;","import React from 'react';\nimport { Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport './App.css';\nimport Preloader from './Components/common/Preloader';\nimport HeaderContainer from './Components/Header/HeaderContainer'\n/* import LoginContainer from './Components/Login/LoginContainer'; */\n/* import PaymentsContainer from './Components/Payments/PaymentsContainer'; */\n/* import Settings from './Components/Settings/Settings'; */\n/* import TodoContainer from './Components/Todo/Todo/TodoContainer'; */\n/* import TodoListsContainer from './Components/Todo/TodoLists/TodoListsContainer'; */\nimport { initializeApp } from './Redux/app-reducer';\nconst TodoContainer = React.lazy(() => import('./Components/Todo/Todo/TodoContainer'));\nconst TodoListsContainer = React.lazy(() => import('./Components/Todo/TodoLists/TodoListsContainer'));\nconst PaymentsContainer = React.lazy(() => import('./Components/Payments/PaymentsContainer'));\nconst Settings = React.lazy(() => import('./Components/Settings/Settings'));\nconst LoginContainer = React.lazy(() => import('./Components/Login/LoginContainer'));\n\n\n\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.initializeApp();\n  }\n  render(){\n    if (!this.props.initialized){\n      return <Preloader />\n    }\n    \n    return (\n    <div className=\"app-wrapper\">\n      <HeaderContainer />\n      <div className=\"app-wrapper-content\">\n      <Suspense fallback={<Preloader />}>\n        <Route path={'/TodoLists'} render={() => <TodoListsContainer /* store={props.store} */ />}/>\n        <Route path={'/Todo/:todoListId'} render={() => <TodoContainer /* store={props.store} */ />}/>\n        <Route path={'/Payments'} render={() => <PaymentsContainer /* store={props.store} *//>} />\n        <Route path={'/Settings'} render={() => <Settings />} />\n        <Route path={'/Login'} render={() => <LoginContainer />} />\n        </Suspense>\n      </div>\n    </div>\n  );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    initialized: state.app.initialized\n  }\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {initializeApp})) (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore, applyMiddleware, compose  } from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport paymentsReducer from \"./payments-reducer\";\r\nimport todoReducer from \"./todo-reducer\";\r\nimport thunk from 'redux-thunk'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    todoPage: todoReducer,\r\n    paymentsPage: paymentsReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n/* let store = createStore(reducers, applyMiddleware(thunk)); */\r\n\r\nexport default store;\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport store from './Redux/redux-store'\nimport { Provider } from 'react-redux';\n\n\n\n\n  ReactDOM.render(\n    <HashRouter /* basename={process.env.PUBLIC_URL} */>\n      <React.StrictMode>\n        <Provider store={store}>\n           <App />\n        </Provider>\n      </React.StrictMode>\n    </HashRouter>,\n    document.getElementById('root')\n  );\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}