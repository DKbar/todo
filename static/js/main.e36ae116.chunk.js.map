{"version":3,"sources":["Components/Header/Header.module.css","Redux/auth-reducer.js","assets/images/loading.gif","Components/common/Preloader.js","Redux/todo-reducer.js","storageService.js","Redux/payments-reducer.js","env/env.js","api/api.js","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Redux/app-reducer.js","App.js","reportWebVitals.js","Redux/redux-store.js","index.js"],"names":["module","exports","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","userId","email","login","isAuth","captchaUrl","setUserDataAC","type","data","getCaptchaUrlSuccessAC","getAuthTC","dispatch","authAPI","getAuth","then","resultCode","id","values","setStatus","a","getCapcthaUrl","messages","securityAPI","getCaptchaUrl","url","logout","authReducer","state","action","Preloader","src","preloader","alt","ADD_TASK","DELETE_TASK","CHANGE_TASK","CHANGE_TODO_LIST","SET_TODO_TASKS","ADD_TODO_LIST","DELETE_TODO_LIST","SET_TODO_LISTS","TOGGLE_IS_FETCHING","SET_TOTAL_PAGES_COUNT","CHANGE_PAGE","todoLists","todoTasks","description","title","completed","status","priority","startDate","Date","deadline","todoListId","order","addedDate","isFetching","pageSize","totalCount","currentPage","changeTaskAC","taskId","task","onDeleteTaskAC","onDeleteTodoListAC","changeTodoListAC","toggleIsFetchingAC","setTotalPagesCountAC","getTodoLists","todoAPI","addTodoList","item","getTodoTasks","page","items","addTask","getState","totalCountUp","todoPage","newTask","changeTask","deleteTask","totalCountDown","Math","ceil","deleteTodoList","changeTodoList","todoReducer","slice","filter","map","todoList","storageService","paymentsJson","JSON","stringify","localStorage","setItem","getItem","parse","ADD_PAYMENT","UPDATE_PAYMENT_TEXT","UPDATE_PAYMENT_COST","SET_PAYMENTS","dateFormat","num","paymentsData","newPaymentText","newPaymentCost","onPaymentChangeAC","text","onPaymentCostChangeAC","getPayments","setPaymentsAC","addPayments","paymentsPage","paymentsReducer","newPayment","payment","category","cost","date","now","getDate","getMonth","getFullYear","obj","find","o","payments","push","p","dev","instance","axios","withCredentials","baseURL","headers","get","response","post","delete","put","password","rememberMe","captcha","Header","props","className","styles","header","itemSmall","onClick","to","activeClassName","activeLink","name","HeaderContainer","this","React","Component","connect","auth","INITIALIZED_SUCCESS","initialized","appReducer","TodoContainer","lazy","TodoListsContainer","PaymentsContainer","Settings","LoginContainer","App","initializeApp","fallback","path","render","compose","withRouter","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,qBAAqB,WAAa,2BAA2B,UAAY,0BAA0B,OAAS,yB,gLCAzNC,EAAgB,gBAChBC,EAA0B,0BAE5BC,EAAe,CACfC,OAAQ,KACRC,MAAO,KACPC,MAAO,KACPC,QAAQ,EACRC,WAAY,MAqBHC,EAAgB,SAACL,EAAQC,EAAOC,EAAOC,GAAvB,MAAmC,CAC5DG,KAAMT,EACNU,KAAM,CAAEP,SAAQC,QAAOC,QAAOC,YAGrBK,EAAyB,SAACJ,GAAD,MAAiB,CACnDE,KAAMR,EACNS,KAAM,CAAEH,gBAGCK,EAAY,kBAAM,SAACC,GAC5B,OAAOC,IAAQC,UACVC,MAAK,SAAAN,GACF,GAAwB,IAApBA,EAAKO,WAAkB,CACvB,MAA2BP,EAAKA,KAA1BQ,EAAN,EAAMA,GAAIb,EAAV,EAAUA,MAAOD,EAAjB,EAAiBA,MACjBS,EAASL,EAAcU,EAAId,EAAOC,GAAO,UAK5CA,EAAQ,SAACc,EAAQC,GAAT,8CAAuB,WAAOP,GAAP,eAAAQ,EAAA,sEACvBP,IAAQT,MAAMc,GADS,OAEhB,KADpBT,EADoC,QAE/BO,WACLJ,EAASD,KACkB,KAApBF,EAAKO,WACZJ,EAASS,KAETF,EAAUV,EAAKa,SAAS,IAPY,2CAAvB,uDAURD,EAAgB,yDAAM,WAAOT,GAAP,iBAAAQ,EAAA,sEAEZG,IAAYC,gBAFA,OAEzBf,EAFyB,OAGzBH,EAAaG,EAAKgB,IACxBb,EAASF,EAAuBJ,IAJD,2CAAN,uDAOhBoB,EAAS,yDAAM,WAAOd,GAAP,SAAAQ,EAAA,sEACPP,IAAQa,SADD,OAEA,IAFA,OAEfV,YACLJ,EAASL,EAAc,KAAM,KAAM,MAAM,IAHrB,2CAAN,uDAOPoB,IA9DK,WAAmC,IAAlCC,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCAClD,OAAQA,EAAOrB,MACX,KAAKT,EAKL,KAAKC,EACD,OAAO,2BACA4B,GACAC,EAAOpB,MAElB,QACI,OAAOmB,K,gCCzBJ,UAA0B,oC,OCO1BE,IANC,WACZ,OACI,qBAAKC,IAAKC,EAAWC,IAAI,gB,kWCA3BC,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAqB,qBACrBC,EAAwB,wBACxBC,EAAc,cAEhB3C,EAAe,CACf4C,UAAW,GACXC,UAAW,CACP,CACIC,YAAa,GACbC,MAAO,GACPC,WAAW,EACXC,OAAQ,GACRC,SAAU,GACVC,UAAW,IAAIC,KACfC,SAAU,IAAID,KACdpC,GAAI,GACJsC,WAAY,GACZC,MAAO,GACPC,UAAW,KAInBC,YAAY,EACZC,SAAU,GACVC,WAAW,KACXC,YAAa,GA4FJC,EAAe,SAACC,EAAQC,GAAT,MAAmB,CAC3CxD,KAAM4B,EACN2B,OAAQA,EACRC,KAAMA,IAGGC,EAAiB,SAACF,GAAD,MAAa,CAAEvD,KAAM2B,EAAa4B,WAEnDG,EAAqB,SAACX,GAAD,MAAiB,CAAE/C,KAAMgC,EAAkBe,eAChEY,EAAmB,SAACZ,EAAYP,GAAb,MAAwB,CACpDxC,KAAM6B,EACNkB,WAAYA,EACZP,MAAOA,IAIEoB,EAAqB,SAACV,GAAD,MAAiB,CAAElD,KAAMkC,EAAoBgB,eAClEW,EAAuB,SAACT,GAAD,MAAiB,CAAEpD,KAAMmC,EAAuBiB,eAGvEU,EAAe,yDAAM,WAAO1D,GAAP,eAAAQ,EAAA,6DAC9BR,EAASwD,GAAmB,IADE,SAEXG,IAAQD,eAFG,OAExB7D,EAFwB,OAG9BG,EAASwD,GAAmB,IAC5BxD,EAV0C,CAAEJ,KAAMiC,EAAgBI,UAU1CpC,IAJM,2CAAN,uDAOf+D,EAAc,SAACxB,GAAD,8CAAW,WAAOpC,GAAP,eAAAQ,EAAA,sEACfmD,IAAQC,YAAYxB,GADL,OAEV,KADlBvC,EAD4B,QAEzBO,YACLJ,GAvBwB6D,EAuBChE,EAAKA,KAAKgE,KAvBD,CAAEjE,KAAM+B,EAAekC,UAoB3B,iCApBP,IAACA,IAoBM,OAAX,uDAMdC,EAAe,SAACnB,EAAYM,EAAaF,GAA1B,8CAAuC,WAAO/C,GAAP,eAAAQ,EAAA,6DAC/DR,EAhBmC,CAAEJ,KAAMoC,EAAa+B,KAgBlCd,IADyC,SAE9CU,IAAQG,aAAanB,EAAYM,EAAaF,GAFA,OAE3DlD,EAF2D,OAG/DG,EAASwD,GAAmB,IAC5BxD,GAtB2BkC,EAsBHrC,EAAKmE,MAtBa,CAAEpE,KAAM8B,EAAgBQ,eAuBlElC,EAASyD,EAAqB5D,EAAKmD,aAL4B,iCAlBrC,IAACd,IAkBoC,OAAvC,uDAQf+B,EAAU,SAACtB,EAAYP,EAAiBY,GAA9B,8CAA6C,WAAOhD,EAAUkE,GAAjB,qBAAA1D,EAAA,sEAC/CmD,IAAQM,QAAQtB,EAAYP,GADmB,OAC5DvC,EAD4D,OAE5DsE,EAAenB,EAAa,EAC1BD,EAAWmB,IAAWE,SAASrB,SACb,IAApBlD,EAAKO,cACDiE,EAAUxE,EAAKA,KAAKgE,MAChB1B,YAAc,mDACtBkC,EAAQhC,WAAY,EACpBgC,EAAQ/B,OAAS,EACjB+B,EAAQ9B,SAAW,EACnB8B,EAAQ7B,UAAY,IAAIC,KACxB4B,EAAQ3B,SAAW,IAAID,MAAsB,IAAIA,KAArB,OAC5BzC,EAhD8B,CAAEJ,KAAM0B,EAAUuC,KAgD3BQ,IACrBrE,EAASyD,EAAqBU,IAC9BnE,EAASsE,EAAWD,EAAQ1B,WAAY0B,EAAQhE,GAAIgE,IACpDrE,EAAS8D,EAAanB,EAAY,EAAGI,KAfuB,2CAA7C,yDAoBVwB,EAAa,SAAC5B,EAAYQ,EAAQH,EAAYC,EAAaF,GAA9C,8CAA2D,WAAO/C,GAAP,iBAAAQ,EAAA,6DAC7EgE,EAAiBxB,EAAa,EAD+C,SAEhEW,IAAQY,WAAW5B,EAAYQ,GAFiC,OAGzD,IAHyD,OAGxE/C,aACLJ,EAASqD,EAAeF,IACxBnD,EAASyD,EAAqBe,IAC1BA,EAAiB,KAAO,IACpBvB,EAAcwB,KAAKC,KAAKF,EAAiBzB,GAC7C/C,EAAS8D,EAAanB,EAAYM,EAAaF,MAR0B,2CAA3D,uDAYb4B,EAAiB,SAAChC,GAAD,8CAAgB,WAAO3C,GAAP,SAAAQ,EAAA,sEACzBmD,IAAQgB,eAAehC,GADE,OAElB,IAFkB,OAEjCvC,YACLJ,EAASsD,EAAmBX,IAHU,2CAAhB,uDAMjBiC,EAAiB,SAACjC,EAAYP,GAAb,8CAAuB,WAAOpC,GAAP,SAAAQ,EAAA,sEAChCmD,IAAQiB,eAAejC,EAAYP,GADH,OAEzB,IAFyB,OAExChC,YACLJ,EAASuD,EAAiBZ,EAAYP,IAHO,2CAAvB,uDAMjBkC,EAAa,SAAC3B,EAAYQ,EAAQC,GAArB,8CAA8B,WAAOpD,GAAP,eAAAQ,EAAA,sEACnCmD,IAAQW,WAAW3B,EAAYQ,EAA/B,eAA4CC,IADT,OAE5B,KADpBvD,EADgD,QAE3CO,YACLJ,EAASkD,EAAaC,EAAQtD,EAAKA,KAAKgE,OAHQ,2CAA9B,uDAOXgB,IArLK,WAAmC,IAAlC7D,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCAElD,OAAQA,EAAOrB,MACX,KAAK0B,EACD,OAAO,2BACAN,GADP,IAEIkB,UAAU,CAAEjB,EAAO4C,MAAV,mBAGD7C,EAAMkB,UAAU4C,MAAM,EAAG,OAGzC,KAAKvD,EACD,OAAO,2BACAP,GADP,IAEIkB,UAAU,YAAKlB,EAAMkB,UAAU6C,QAAO,SAAA3B,GAClC,OAAOA,EAAK/C,KAAOY,EAAOkC,aAGtC,KAAK3B,EACD,OAAO,2BACAR,GADP,IAEIkB,UAAU,YAAKlB,EAAMkB,UAAU8C,KAAI,SAAA5B,GAM/B,OALIA,EAAK/C,KAAOY,EAAOkC,SACnBC,EAAOnC,EAAOmC,MAIXA,QAGnB,KAAK1B,EACD,OAAO,2BACAV,GADP,IAEIkB,UAAWjB,EAAOiB,YAG1B,KAAKP,EAED,OAAO,2BACAX,GADP,IAEIiB,UAAU,CAAEhB,EAAO4C,MAAV,mBAAmB7C,EAAMiB,cAG1C,KAAKL,EACD,OAAO,2BACAZ,GADP,IAEIiB,UAAU,YAAKjB,EAAMiB,UAAU8C,QAAO,SAAAE,GAClC,OAAOA,EAAS5E,KAAOY,EAAO0B,iBAI1C,KAAKlB,EACD,OAAO,2BACAT,GADP,IAEIiB,UAAU,YAAKjB,EAAMiB,UAAU+C,KAAI,SAAAC,GAI/B,OAHIA,EAAS5E,KAAOY,EAAO0B,aACvBsC,EAAS7C,MAAQnB,EAAOmB,OAErB6C,QAInB,KAAKpD,EACD,OAAO,2BACAb,GADP,IAEIiB,UAAWhB,EAAOgB,YAG1B,KAAKH,EACD,OAAO,2BACAd,GADP,IAEI8B,WAAY7B,EAAO6B,aAEvB,KAAKf,EACD,OAAO,2BACAf,GADP,IAEIgC,WAAY/B,EAAO+B,aAE3B,KAAKhB,EACD,OAAO,2BACAhB,GADP,IAEIiC,YAAahC,EAAO8C,OAGhC,QACI,OAAO/C,K,2LC7HNkE,EAAiB,SAEjBlB,GAEL,IAAMmB,EAAeC,KAAKC,UAAUrB,GACpCsB,aAAaC,QAAQ,WAAYJ,IAL5BD,EAAiB,WAStB,IAAMC,EAAeG,aAAaE,QAAQ,YAC1C,OAAOJ,KAAKK,MAAMN,ICRpBO,EAAc,cACdC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAe,eAEjBC,EAAa,SAACC,GAId,OAHIA,EAAM,KACNA,EAAM,IAAMA,GAETA,GAIP1G,EAAe,CACf2G,aAAc,GAkBdC,eAAgB,GAChBC,eAAgB,GA6DPC,EAAoB,SAACC,GAAD,MAAW,CACxCxG,KAAM+F,EACNS,KAAMA,IAGGC,EAAwB,SAACN,GAAD,MAAU,CAE3CnG,KAAMgG,EACNG,IAAKA,IAOIO,EAAc,kBAAM,SAACtG,GAE9BA,EArByB,SAACgE,GAAD,MAAY,CACrCpE,KAAMiG,EACN7B,SAmBSuC,CADKrB,QAKLsB,EAAc,kBAAM,SAACxG,EAAUkE,GACxClE,EAXiC,CAAEJ,KAAM8F,IAYzC,IAAMM,EAAe9B,IAAWuC,aAAaT,aAC7Cd,EAAwBc,KAMbU,IAxFS,WAAmC,IAAlC1F,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCACtD,OAAQA,EAAOrB,MACX,KAAKiG,EACD,OAAO,2BACA7E,GADP,IAEIgF,aAAc/E,EAAO+C,QAE7B,KAAK0B,EACD,IAAIiB,EAAa,CACbtG,GAAI,EACJuG,QAAS5F,EAAMiF,eACfY,SAAU,OACVC,KAAM9F,EAAMkF,gBAEZa,EAAO,IAAItE,KACXuE,EAAMlB,EAAWiB,EAAKE,WAAa,IAAMnB,EAAYiB,EAAKG,WAAa,GAAM,IAAMH,EAAKI,cACxFC,EAAMpG,EAAMgF,aAAaqB,MAAK,SAAAC,GAAC,OAAIA,EAAEP,OAASC,KAEnD,OACKI,EAAG,2BAEQpG,GAFR,IAGKgF,aAAchF,EAAMgF,aAAahB,KAAI,SAAAsC,GAIjC,OAHIA,EAAEP,OAASC,GACbM,EAAEC,SAASC,KAAKb,GAEX,2BAAIW,GAAX,IAAcC,SAAUD,EAAEC,SAASvC,KAAI,SAAAyC,GAAC,sBAASA,WAErDvB,eAAgB,IATrB,2BAcQlF,GAdR,IAeKgF,aAAa,GAAD,mBAAMhF,EAAMgF,cAAZ,CAA0B,CAAEe,KAAMC,EAAKO,SAAU,CAACZ,MAC9DT,eAAgB,IAIhC,KAAKP,EACD,OAAO,2BACA3E,GADP,IAEIiF,eAAgBhF,EAAOmF,OAE/B,KAAKR,EACD,OAAO,2BACA5E,GADP,IAEIkF,eAAgBjF,EAAO8E,MAE/B,QACI,OAAO/E,K,0LCxFN0G,EACA,gDADAA,EAED,uCCGNC,E,MAAWC,OAAa,CAC1BC,iBAAiB,EACjBC,QAASJ,EACTK,QAAS,CAAE,UAAWL,KAKb/D,EAAU,CACnBD,aADmB,WAEf,OAAOiE,EAASK,IAAI,cACf7H,MAAK,SAAA8H,GAAQ,OAAIA,EAASpI,SAGnCiE,aANmB,SAMNnB,EAAYM,EAAaF,GAClC,OAAO4E,EAASK,IAAI,cAAgBrF,EAAhB,sBAA4CM,EAA5C,kBAAiEF,IAChF5C,MAAK,SAAA8H,GAMF,OALAA,EAASpI,KAAKmE,MAAMgB,KAAI,SAAAsC,GAGpB,OAFAA,EAAE9E,UAAY,IAAIC,KAAK6E,EAAE9E,UAAY,KACrC8E,EAAE5E,SAAW,IAAID,KAAK6E,EAAE5E,SAAW,KAC5B,eAAK4E,MAETW,EAASpI,SAI5B+D,YAlBmB,SAkBPxB,GACR,OAAOuF,EAASO,KAAK,aAAc,CAAE9F,UAChCjC,MAAK,SAAA8H,GAAQ,OAAIA,EAASpI,SAGnC8E,eAvBmB,SAuBJhC,GACX,OAAOgF,EAASQ,OAAO,cAAgBxF,GAClCxC,MAAK,SAAA8H,GAAQ,OAAIA,EAASpI,SAEnC+E,eA3BmB,SA2BJjC,EAAYP,GACvB,OAAOuF,EAASS,IAAI,cAAgBzF,EAAY,CAC5CP,MAAOA,IAENjC,MAAK,SAAA8H,GACF,OAAOA,EAASpI,SAG5BoE,QAnCmB,SAmCXtB,EAAYP,GAChB,OAAOuF,EAASO,KAAK,cAAgBvF,EAAa,SAAU,CAAEP,MAAOA,IAChEjC,MAAK,SAAA8H,GACF,OAAOA,EAASpI,SAE5B0E,WAxCmB,SAwCR5B,EAAYQ,GACnB,OAAOwE,EAASQ,OAAO,cAAgBxF,EAAa,UAAYQ,GAC3DhD,MAAK,SAAA8H,GAAQ,OAAIA,EAASpI,SAEnCyE,WA5CmB,SA4CR3B,EAAYQ,EAAQC,GAC3B,OAAOuE,EAASS,IAAI,cAAgBzF,EAAa,UAAYQ,EAAQ,CACjEf,MAAOgB,EAAKhB,MACZD,YAAaiB,EAAKjB,YAClBE,UAAUe,EAAKf,UACfC,OAAQc,EAAKd,OACbC,SAAUa,EAAKb,SACfC,UAAWY,EAAKZ,UAChBE,SAAUU,EAAKV,WAEdvC,MAAK,SAAA8H,GAGF,OAFAA,EAASpI,KAAKA,KAAKgE,KAAKrB,UAAY,IAAIC,KAAKwF,EAASpI,KAAKA,KAAKgE,KAAKrB,WACrEyF,EAASpI,KAAKA,KAAKgE,KAAKnB,SAAW,IAAID,KAAKwF,EAASpI,KAAKA,KAAKgE,KAAKnB,UAC7DuF,EAASpI,UAOnBI,EAAU,CACnBC,QADmB,WAEf,OAAOyH,EAASK,IAAI,WACf7H,MAAK,SAAA8H,GAAQ,OAAIA,EAASpI,SAGnCL,MANmB,SAMbc,GACF,OAAOqH,EAASO,KAAK,aAAc,CAC/B3I,MAAOe,EAAOf,MACd8I,SAAU/H,EAAO+H,SACjBC,WAAYhI,EAAOgI,WACnBC,QAAQjI,EAAOiI,UAEdpI,MAAK,SAAA8H,GAAQ,OAAIA,EAASpI,SAEnCiB,OAfmB,WAgBf,OAAO6G,EAASQ,OAAO,cAClBhI,MAAK,SAAA8H,GAAQ,OAAIA,EAASpI,UAI1Bc,EAAc,CACvBC,cADuB,WAGnB,OAAO+G,EAASK,IAAI,4BACnB7H,MAAK,SAAA8H,GACF,OAAOA,EAASpI,W,0MCnEb2I,EAjCA,SAACC,GAIZ,OACA,yBAAQC,UAAWC,IAAOC,OAA1B,UACI,qBAAKF,UAAWC,IAAOE,UAAvB,SACKJ,EAAMhJ,OACN,gCACAgJ,EAAMjJ,MACP,qBAAKkJ,UAAWC,IAAO7H,OAAQgI,QATxB,WACXL,EAAM3H,UAQF,uBAEC,cAAC,IAAD,CAASiI,GAAG,SAASC,gBAAiBL,IAAOM,WAA7C,qBAIL,qBAAKP,UAAWC,IAAOE,UAAvB,SACI,cAAC,IAAD,CAASE,GAAG,YAAYC,gBAAiBL,IAAOM,WAAhD,wBAGJ,qBAAKP,UAAWC,IAAOO,KAAvB,mBACA,sBAAKR,UAAWC,IAAO3E,MAAvB,UACI,qBAAK0E,UAAWC,IAAO9E,KAAvB,SACI,cAAC,IAAD,CAASkF,GAAG,aAAaC,gBAAiBL,IAAOM,WAAjD,oBAEJ,qBAAKP,UAAWC,IAAO9E,KAAvB,SACI,cAAC,IAAD,CAASkF,GAAG,YAAYC,gBAAiBL,IAAOM,WAAhD,iECxBVE,E,4JAEF,WACI,OACI,cAAC,EAAD,eAAYC,KAAKX,Y,GAJCY,IAAMC,WA0BrBC,eAfO,SAACvI,GACnB,MAAM,CACNvB,OAAQuB,EAAMwI,KAAK/J,OACnBD,MAAOwB,EAAMwI,KAAKhK,UAIG,SAACQ,GACtB,MAAM,CACFc,OAAQ,WACJd,EAASc,mBAKNyI,CAA6CJ,GC7BtDM,EAAsB,sBAExBpK,EAAe,CACnBqK,aAAa,GA0BEC,EAxBI,WAAmC,IAAlC3I,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCACjD,OAAQA,EAAOrB,MACX,KAAK6J,EACD,OAAO,2BACAzI,GADP,IAEI0I,aAAa,IAErB,QACI,OAAO1I,ICAb4I,EAAgBP,IAAMQ,MAAK,kBAAM,8DACjCC,EAAqBT,IAAMQ,MAAK,kBAAM,uDACtCE,EAAoBV,IAAMQ,MAAK,kBAAM,iCACrCG,EAAWX,IAAMQ,MAAK,kBAAM,iCAC5BI,EAAiBZ,IAAMQ,MAAK,kBAAM,uDAKlCK,E,uKACJ,WACEd,KAAKX,MAAM0B,kB,oBAEb,WACE,OAAKf,KAAKX,MAAMiB,YAKhB,sBAAKhB,UAAU,cAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,sBAAf,SACA,eAAC,WAAD,CAAU0B,SAAU,cAAClJ,EAAA,EAAD,IAApB,UACE,cAAC,IAAD,CAAOmJ,KAAM,aAAcC,OAAQ,kBAAM,cAACR,EAAD,OACzC,cAAC,IAAD,CAAOO,KAAM,oBAAqBC,OAAQ,kBAAM,cAACV,EAAD,OAChD,cAAC,IAAD,CAAOS,KAAM,YAAaC,OAAQ,kBAAM,cAACP,EAAD,OACxC,cAAC,IAAD,CAAOM,KAAM,YAAaC,OAAQ,kBAAM,cAACN,EAAD,OACxC,cAAC,IAAD,CAAOK,KAAM,SAAUC,OAAQ,kBAAM,cAACL,EAAD,eAZhC,cAAC/I,EAAA,EAAD,Q,GANKmI,IAAMC,WAgCTiB,cACbC,IACAjB,aARsB,SAACvI,GACvB,MAAM,CACJ0I,YAAa1I,EAAMyJ,IAAIf,eAMA,CAACS,cDpCC,kBAAM,SAACnK,GAChC,IAAI0K,EAAU1K,EAASD,eACvB4K,QAAQC,IAAI,CAACF,IACJvK,MAAK,WACNH,EAN6B,CAACJ,KAAM6J,WCoCjCc,CAE+BL,GC9C/BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqB5K,MAAK,YAAkD,IAA/C6K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wBCAVO,EAAWC,YAAgB,CAC3BlH,SAAUS,IACV4B,aAAcC,IACd8C,KAAMzI,IACN0J,IAAKd,IAIH4B,EAAmBC,OAAOC,sCAAwClB,IAClEmB,EAAQC,YAAYN,EAAUE,EAAiBK,YAAgBC,OAItDH,IACfF,OAAOE,MAAQA,ECTbI,IAASxB,OACP,cAAC,IAAD,UACE,cAAC,IAAMyB,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACG,cAAC,EAAD,UAIPM,SAASC,eAAe,SAS5BpB,M","file":"static/js/main.e36ae116.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3rkAF\",\"name\":\"Header_name__1kOkj\",\"items\":\"Header_items__m1LXD\",\"item\":\"Header_item__L_pNn\",\"activeLink\":\"Header_activeLink__3PL36\",\"itemSmall\":\"Header_itemSmall__2pkRv\",\"logout\":\"Header_logout__IQ0lr\"};","import { authAPI, securityAPI } from \"../api/api\";\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            };\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setUserDataAC = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getCaptchaUrlSuccessAC = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    data: { captchaUrl }\r\n});\r\n\r\nexport const getAuthTC = () => (dispatch) => {\r\n    return authAPI.getAuth()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                let { id, login, email } = data.data\r\n                dispatch(setUserDataAC(id, email, login, true))\r\n            }\r\n        })\r\n};\r\n\r\nexport const login = (values, setStatus) => async (dispatch) => {\r\n    let data = await authAPI.login(values);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthTC())\r\n    } else if (data.resultCode === 10) {\r\n        dispatch(getCapcthaUrl())\r\n    } else {\r\n        setStatus(data.messages[0])\r\n    }\r\n}\r\nexport const getCapcthaUrl = () => async (dispatch) => {\r\n\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n    dispatch(getCaptchaUrlSuccessAC(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserDataAC(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","import preloader from '../../assets/images/loading.gif'\r\nlet Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt='preloader' />\r\n    )\r\n}\r\n\r\nexport default Preloader;","import { todoAPI } from \"../api/api\";\r\n\r\n\r\nconst ADD_TASK = 'ADD_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nconst CHANGE_TASK = 'CHANGE_TASK';\r\nconst CHANGE_TODO_LIST = 'CHANGE_TODO_LIST';\r\nconst SET_TODO_TASKS = 'SET_TODO_TASKS'\r\nconst ADD_TODO_LIST = 'ADD_TODO_LIST';\r\nconst DELETE_TODO_LIST = 'DELETE_TODO_LIST';\r\nconst SET_TODO_LISTS = 'SET_TODO_LISTS'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst SET_TOTAL_PAGES_COUNT = 'SET_TOTAL_PAGES_COUNT'\r\nconst CHANGE_PAGE = 'CHANGE_PAGE'\r\n\r\nlet initialState = {\r\n    todoLists: [],\r\n    todoTasks: [\r\n        {\r\n            description: '',\r\n            title: '',\r\n            completed: false,\r\n            status: '',\r\n            priority: '',\r\n            startDate: new Date(),\r\n            deadline: new Date(),\r\n            id: '',\r\n            todoListId: '',\r\n            order: '',\r\n            addedDate: '',\r\n        }\r\n    ],\r\n/*     newTodoListName: '', */\r\n    isFetching: false,\r\n    pageSize: 10,\r\n    totalCount:null,\r\n    currentPage: 1\r\n};\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todoTasks: [action.item,\r\n/*                     action.item.deadline = new Date(action.item.deadline),\r\n                    action.item.startDate = new Date(action.item.startDate), */\r\n                     ...state.todoTasks.slice(0, 9)\r\n                    ],\r\n            }\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todoTasks: [...state.todoTasks.filter(task => {\r\n                    return task.id !== action.taskId;\r\n                })],\r\n            };\r\n        case CHANGE_TASK:\r\n            return {\r\n                ...state,\r\n                todoTasks: [...state.todoTasks.map(task => {\r\n                    if (task.id === action.taskId) {\r\n                        task = action.task;\r\n/*                         task.startDate = new Date(task.startDate);\r\n                        task.deadline = new Date(task.deadline); */\r\n                    }\r\n                    return task;\r\n                })],\r\n            };\r\n        case SET_TODO_TASKS:\r\n            return {\r\n                ...state,\r\n                todoTasks: action.todoTasks\r\n            };\r\n\r\n        case ADD_TODO_LIST:\r\n\r\n            return {\r\n                ...state,\r\n                todoLists: [action.item, ...state.todoLists]\r\n            };\r\n\r\n        case DELETE_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                todoLists: [...state.todoLists.filter(todoList => {\r\n                    return todoList.id !== action.todoListId;\r\n                })],\r\n            };\r\n\r\n        case CHANGE_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                todoLists: [...state.todoLists.map(todoList => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        todoList.title = action.title\r\n                    }\r\n                    return todoList;\r\n                })],\r\n            };\r\n\r\n        case SET_TODO_LISTS:\r\n            return {\r\n                ...state,\r\n                todoLists: action.todoLists,\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n            case SET_TOTAL_PAGES_COUNT:\r\n                return {\r\n                    ...state,\r\n                    totalCount: action.totalCount\r\n                }; \r\n            case CHANGE_PAGE:\r\n                return {\r\n                    ...state,\r\n                    currentPage: action.page\r\n                };\r\n                \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const changeTaskAC = (taskId, task) => ({\r\n    type: CHANGE_TASK,\r\n    taskId: taskId,\r\n    task: task\r\n});\r\nexport const onAddTaskAC = (item) => ({ type: ADD_TASK, item });\r\nexport const onDeleteTaskAC = (taskId) => ({ type: DELETE_TASK, taskId });\r\nexport const onAddTodoListAC = (item) => ({ type: ADD_TODO_LIST, item });\r\nexport const onDeleteTodoListAC = (todoListId) => ({ type: DELETE_TODO_LIST, todoListId });\r\nexport const changeTodoListAC = (todoListId, title) => ({\r\n    type: CHANGE_TODO_LIST,\r\n    todoListId: todoListId,\r\n    title: title\r\n});\r\nexport const setTodoListsAC = (todoLists) => ({ type: SET_TODO_LISTS, todoLists });\r\nexport const setTodoTasksAC = (todoTasks) => ({ type: SET_TODO_TASKS, todoTasks });\r\nexport const toggleIsFetchingAC = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const setTotalPagesCountAC = (totalCount) => ({ type: SET_TOTAL_PAGES_COUNT, totalCount });\r\nexport const changePageAC = (page) => ({ type: CHANGE_PAGE, page });\r\n\r\nexport const getTodoLists = () => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    const data = await todoAPI.getTodoLists();\r\n    dispatch(toggleIsFetchingAC(false));\r\n    dispatch(setTodoListsAC(data));\r\n    ;\r\n}\r\nexport const addTodoList = (title) => async (dispatch) => {\r\n    const data = await todoAPI.addTodoList(title);\r\n    if (data.resultCode === 0) {\r\n        dispatch(onAddTodoListAC(data.data.item))\r\n    }\r\n}\r\nexport const getTodoTasks = (todoListId, currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(changePageAC(currentPage))\r\n    let data = await todoAPI.getTodoTasks(todoListId, currentPage, pageSize);\r\n    dispatch(toggleIsFetchingAC(true))\r\n    dispatch(setTodoTasksAC(data.items))\r\n    dispatch(setTotalPagesCountAC(data.totalCount))\r\n\r\n}\r\nexport const addTask = (todoListId, title, /* cb, */ totalCount) => async (dispatch, getState) => {\r\n    let data = await todoAPI.addTask(todoListId, title);\r\n    let totalCountUp = totalCount + 1;\r\n    const pageSize = getState().todoPage.pageSize\r\n    if (data.resultCode === 0) {\r\n        let newTask = data.data.item;\r\n        newTask.description = 'Описание';\r\n        newTask.completed = false;\r\n        newTask.status = 0;\r\n        newTask.priority = 3;\r\n        newTask.startDate = new Date();\r\n        newTask.deadline = new Date(1000*60*60*24 + +new Date());\r\n        dispatch(onAddTaskAC(newTask))\r\n        dispatch(setTotalPagesCountAC(totalCountUp))\r\n        dispatch(changeTask(newTask.todoListId, newTask.id, newTask))\r\n        dispatch(getTodoTasks(todoListId, 1, pageSize))\r\n/*         cb(); */\r\n    }\r\n\r\n}\r\nexport const deleteTask = (todoListId, taskId, totalCount, currentPage, pageSize) => async (dispatch) => {\r\n    let totalCountDown = totalCount - 1;\r\n    let data = await todoAPI.deleteTask(todoListId, taskId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(onDeleteTaskAC(taskId))\r\n        dispatch(setTotalPagesCountAC(totalCountDown))\r\n        if (totalCountDown % 10 === 0){\r\n            let currentPage = Math.ceil(totalCountDown / pageSize)\r\n            dispatch(getTodoTasks(todoListId, currentPage, pageSize))\r\n        }\r\n    }\r\n}\r\nexport const deleteTodoList = (todoListId) => async (dispatch) => {\r\n    let data = await todoAPI.deleteTodoList(todoListId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(onDeleteTodoListAC(todoListId))\r\n    }\r\n}\r\nexport const changeTodoList = (todoListId, title) => async (dispatch) => {\r\n    let data = await todoAPI.changeTodoList(todoListId, title);\r\n    if (data.resultCode === 0) {\r\n        dispatch(changeTodoListAC(todoListId, title))\r\n    }\r\n}\r\nexport const changeTask = (todoListId, taskId, task) => async (dispatch) => {\r\n    let data = await todoAPI.changeTask(todoListId, taskId, { ...task });\r\n    if (data.resultCode === 0) {\r\n        dispatch(changeTaskAC(taskId, data.data.item))\r\n    }\r\n}\r\n\r\nexport default todoReducer;","export const storageService = {\r\n    \r\n    setItems(items) {\r\n        \r\n        const paymentsJson = JSON.stringify(items);\r\n        localStorage.setItem('payments', paymentsJson);\r\n    },\r\n    getItems() {\r\n        debugger\r\n        const paymentsJson = localStorage.getItem('payments')\r\n        return JSON.parse(paymentsJson);\r\n    }\r\n}","import { storageService } from \"../storageService\";\r\n\r\nconst ADD_PAYMENT = 'ADD_PAYMENT';\r\nconst UPDATE_PAYMENT_TEXT = 'UPDATE_PAYMENT_TEXT';\r\nconst UPDATE_PAYMENT_COST = 'UPDATE_PAYMENT_COST';\r\nconst SET_PAYMENTS = 'SET_PAYMENTS';\r\n\r\nlet dateFormat = (num) => {\r\n    if (num < 10) {\r\n        num = \"0\" + num;\r\n    }\r\n    return num;\r\n\r\n}\r\n\r\nlet initialState = {\r\n    paymentsData: [],\r\n/*     paymentsData: [\r\n        {\r\n            date: '15.03.2021',\r\n            payments: [\r\n                { id: 1, payment: 'payment1', category: \"home\", cost: 50 },\r\n                { id: 2, payment: 'payment2', category: \"home\", cost: 15 },\r\n            ]\r\n        },\r\n        {\r\n            date: '11.06.2021',\r\n            payments: [\r\n                { id: 3, payment: 'payment3', category: \"car\", cost: 150 },\r\n                { id: 4, payment: 'payment4', category: \"car\", cost: 75 },\r\n            ]\r\n        },\r\n\r\n    ], */\r\n    newPaymentText: '',\r\n    newPaymentCost: 0,\r\n};\r\n\r\nconst paymentsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PAYMENTS:\r\n            return {\r\n                ...state,\r\n                paymentsData: action.items\r\n            };\r\n        case ADD_PAYMENT:\r\n            let newPayment = {\r\n                id: 7,\r\n                payment: state.newPaymentText,\r\n                category: 'home',\r\n                cost: state.newPaymentCost\r\n            }\r\n            let date = new Date();\r\n            let now = dateFormat(date.getDate()) + \".\" + dateFormat((date.getMonth() + 1)) + \".\" + date.getFullYear();\r\n            let obj = state.paymentsData.find(o => o.date === now);\r\n\r\n           return (\r\n                obj\r\n                    ? {\r\n                        ...state,\r\n                        paymentsData: state.paymentsData.map(o => {\r\n                            if (o.date === now) {\r\n                              o.payments.push(newPayment);\t\r\n                            }\r\n                            return {...o, payments: o.payments.map(p => ({...p}))};\r\n                        }),\r\n                        newPaymentCost: 0\r\n\r\n                    }\r\n\r\n                    : {\r\n                        ...state,\r\n                        paymentsData: [...state.paymentsData, { date: now, payments: [newPayment] }],\r\n                        newPaymentCost: 0\r\n                    }\r\n            )\r\n\r\n        case UPDATE_PAYMENT_TEXT:\r\n            return {\r\n                ...state,\r\n                newPaymentText: action.text\r\n            };\r\n        case UPDATE_PAYMENT_COST:\r\n            return {\r\n                ...state,\r\n                newPaymentCost: action.num\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPaymentsAC = (items) => ({\r\n    type: SET_PAYMENTS,\r\n    items\r\n});\r\nexport const onPaymentChangeAC = (text) => ({\r\n    type: UPDATE_PAYMENT_TEXT,\r\n    text: text\r\n});\r\n\r\nexport const onPaymentCostChangeAC = (num) => ({\r\n\r\n    type: UPDATE_PAYMENT_COST,\r\n    num: num\r\n});\r\n\r\nexport const onAddPaymentAC = () => ({ type: ADD_PAYMENT })\r\n\r\n\r\n\r\nexport const getPayments = () => (dispatch) => {\r\n    const items = storageService.getItems();\r\n    dispatch(setPaymentsAC(items));\r\n    \r\n}\r\n\r\nexport const addPayments = () => (dispatch, getState) => {\r\n    dispatch(onAddPaymentAC())\r\n    const paymentsData = getState().paymentsPage.paymentsData\r\n    storageService.setItems(paymentsData);\r\n    \r\n    \r\n    \r\n}\r\n\r\nexport default paymentsReducer;","export const dev = {\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n    apiKey: \"be208add-76be-474f-b426-6fa8679c0152\"\r\n    \r\n} ","import * as axios from 'axios';\r\nimport { dev } from '../env/env';\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: dev.baseURL,\r\n    headers: { \"API-KEY\": dev.apiKey }\r\n\r\n})\r\n\r\n\r\nexport const todoAPI = {\r\n    getTodoLists() {\r\n        return instance.get('todo-lists')\r\n            .then(response => response.data);\r\n    },\r\n\r\n    getTodoTasks(todoListId, currentPage, pageSize) {\r\n        return instance.get('todo-lists/' + todoListId + `/tasks?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                response.data.items.map(o => {\r\n                    o.startDate = new Date(o.startDate + 'Z')\r\n                    o.deadline = new Date(o.deadline + 'Z')\r\n                    return { ...o }\r\n                })\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    addTodoList(title) {\r\n        return instance.post('todo-lists', { title })\r\n            .then(response => response.data)\r\n    },\r\n\r\n    deleteTodoList(todoListId) {\r\n        return instance.delete('todo-lists/' + todoListId)\r\n            .then(response => response.data)\r\n    },\r\n    changeTodoList(todoListId, title) {\r\n        return instance.put('todo-lists/' + todoListId, {\r\n            title: title,\r\n        })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    addTask(todoListId, title) {\r\n        return instance.post('todo-lists/' + todoListId + '/tasks', { title: title }) //или просто title\r\n            .then(response => {\r\n                return response.data })\r\n    },\r\n    deleteTask(todoListId, taskId) {\r\n        return instance.delete('todo-lists/' + todoListId + '/tasks/' + taskId)\r\n            .then(response => response.data)\r\n    },\r\n    changeTask(todoListId, taskId, task) {\r\n        return instance.put('todo-lists/' + todoListId + '/tasks/' + taskId, {\r\n            title: task.title,\r\n            description: task.description,\r\n            completed:task.completed,\r\n            status: task.status,\r\n            priority: task.priority,\r\n            startDate: task.startDate,\r\n            deadline: task.deadline,\r\n        })\r\n            .then(response => {\r\n                response.data.data.item.startDate = new Date(response.data.data.item.startDate)\r\n                response.data.data.item.deadline = new Date(response.data.data.item.deadline)\r\n                return response.data\r\n\r\n            })\r\n    },\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get('auth/me')\r\n            .then(response => response.data);\r\n    },\r\n\r\n    login(values) {\r\n        return instance.post('auth/login', {\r\n            email: values.email,\r\n            password: values.password,\r\n            rememberMe: values.rememberMe,\r\n            captcha:values.captcha\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        \r\n        return instance.get('security/get-captcha-url')\r\n        .then(response => {\r\n            return response.data})\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Header.module.css\"\r\n\r\nconst Header = (props) => {\r\n    const logout = () => {\r\n        props.logout()\r\n    }\r\n    return (\r\n    <header className={styles.header}>    \r\n        <div className={styles.itemSmall}>\r\n            {props.isAuth \r\n            ?<div> \r\n            {props.login}\r\n            <div className={styles.logout} onClick={logout}>Logout</div>\r\n            </div>\r\n            :<NavLink to='/Login' activeClassName={styles.activeLink}>Login</NavLink>\r\n            }\r\n            \r\n        </div>\r\n        <div className={styles.itemSmall}>\r\n            <NavLink to='/Settings' activeClassName={styles.activeLink}>Settings</NavLink>\r\n        </div>\r\n\r\n        <div className={styles.name}>Trata</div>\r\n        <div className={styles.items}>\r\n            <div className={styles.item}>\r\n                <NavLink to='/TodoLists' activeClassName={styles.activeLink}>Todo</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to='/Payments' activeClassName={styles.activeLink}>Расходы</NavLink>\r\n            </div>\r\n        </div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../Redux/auth-reducer'\r\nimport Header from './Header'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <Header {...this.props}/> \r\n        )\r\n       \r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        logout: ()=>{\r\n            dispatch(logout())\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","import { getAuthTC } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\ninitialized: false\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthTC());\r\n    Promise.all([promise])\r\n            .then(()=>{\r\n            dispatch(initializedSuccess());\r\n        })\r\n};\r\n\r\n\r\nexport default appReducer;","import React from 'react';\nimport { Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport './App.css';\nimport Preloader from './Components/common/Preloader';\nimport HeaderContainer from './Components/Header/HeaderContainer'\n/* import LoginContainer from './Components/Login/LoginContainer'; */\n/* import PaymentsContainer from './Components/Payments/PaymentsContainer'; */\n/* import Settings from './Components/Settings/Settings'; */\n/* import TodoContainer from './Components/Todo/Todo/TodoContainer'; */\n/* import TodoListsContainer from './Components/Todo/TodoLists/TodoListsContainer'; */\nimport { initializeApp } from './Redux/app-reducer';\nconst TodoContainer = React.lazy(() => import('./Components/Todo/Todo/TodoContainer'));\nconst TodoListsContainer = React.lazy(() => import('./Components/Todo/TodoLists/TodoListsContainer'));\nconst PaymentsContainer = React.lazy(() => import('./Components/Payments/PaymentsContainer'));\nconst Settings = React.lazy(() => import('./Components/Settings/Settings'));\nconst LoginContainer = React.lazy(() => import('./Components/Login/LoginContainer'));\n\n\n\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.initializeApp();\n  }\n  render(){\n    if (!this.props.initialized){\n      return <Preloader />\n    }\n    \n    return (\n    <div className=\"app-wrapper\">\n      <HeaderContainer />\n      <div className=\"app-wrapper-content\">\n      <Suspense fallback={<Preloader />}>\n        <Route path={'/TodoLists'} render={() => <TodoListsContainer /* store={props.store} */ />}/>\n        <Route path={'/Todo/:todoListId'} render={() => <TodoContainer /* store={props.store} */ />}/>\n        <Route path={'/Payments'} render={() => <PaymentsContainer /* store={props.store} *//>} />\n        <Route path={'/Settings'} render={() => <Settings />} />\n        <Route path={'/Login'} render={() => <LoginContainer />} />\n        </Suspense>\n      </div>\n    </div>\n  );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    initialized: state.app.initialized\n  }\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {initializeApp})) (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore, applyMiddleware, compose  } from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport paymentsReducer from \"./payments-reducer\";\r\nimport todoReducer from \"./todo-reducer\";\r\nimport thunk from 'redux-thunk'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    todoPage: todoReducer,\r\n    paymentsPage: paymentsReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n/* let store = createStore(reducers, applyMiddleware(thunk)); */\r\n\r\nexport default store;\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport store from './Redux/redux-store'\nimport { Provider } from 'react-redux';\n\n\n\n\n  ReactDOM.render(\n    <HashRouter /* basename={process.env.PUBLIC_URL} */>\n      <React.StrictMode>\n        <Provider store={store}>\n           <App />\n        </Provider>\n      </React.StrictMode>\n    </HashRouter>,\n    document.getElementById('root')\n  );\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}